pipeline {
    agent any
    environment{
     SONAR_HOME = "${tool 'SonarScanner 4.0'}"
     PATH="${env.SONAR_HOME}/bin:${env.PATH}"
    }
    
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        } 
    
  	stage("build & SonarQube analysis") { 
             steps { 
                  withSonarQubeEnv('sonarserver') {
                  sh "sonar-scanner"
                 }
   			 }
    }
    
      stage("Quality Gate") {
            steps {
              timeout(time: 1, unit: 'HOURS') {
                waitForQualityGate abortPipeline: true
              }
            }
          }
          
    stage("Dependency Check") {
    	steps{
    	    script{
				dependencycheck additionalArguments: '--project game-of-life --scan ./ --out dependency-check-report.xml --format XML', odcInstallation: 'dependency-check'
				dependencyCheckPublisher pattern: 'dependency-check-report.xml', unstableTotalHigh: 50    	    
				}
    	}
     }
    
  
     stage("Contrast Check") {
    	steps{
    	    script{
				contrastVerification applicationId: '6b5866dc-4efa-46b7-af8d-8b42ab8b8c0c', count: 1, profile: 'local', queryBy: 3, rule: 'cache-controls-missing', severity: 'High'   	    
				}
    	}
      }  
  
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
